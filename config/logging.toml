# Scan this file for changes every 30 seconds
refresh_rate = "30 seconds"

[appenders.stdout]
# An appender named "stdout" that writes to stdout
kind = "console"

[appenders.stdout.encoder]
# https://docs.rs/chrono/0.4.11/chrono/format/strftime/index.html
pattern = "{d(%H:%M:%S%.3f)} {h([{l}])} [{T}] {h({M}:{L})} {m}{n}\r"

[appenders.file-application]
kind = "file"
path = "log/inexor-rgf-application.log"

[appenders.file-application.encoder]
pattern = "{d(%Y-%m-%d %H:%M:%S%.3f)} [{l}] [{T}] {M}:{L} - {m}{n}"

[appenders.file-errors]
kind = "file"
path = "log/error.log"

[appenders.file-errors.encoder]
pattern = "{d(%Y-%m-%d %H:%M:%S%.3f)} [{l}] [{T}] {M}:{L} - {m}{n}"

[appenders.file-plugin-connector]
kind = "file"
path = "log/inexor-rgf-plugin-connector.log"

[appenders.file-plugin-connector.encoder]
pattern = "{d(%Y-%m-%d %H:%M:%S%.3f)} [{l}] [{T}] {M}:{L} - {m}{n}"

[appenders.file-plugin-mqtt]
kind = "file"
path = "log/inexor-rgf-plugin-mqtt.log"

[appenders.file-plugin-mqtt.encoder]
pattern = "{d(%Y-%m-%d %H:%M:%S%.3f)} [{l}] [{T}] {M}:{L} - {m}{n}"


# Set the default logging level to "warn" and attach the "stdout" appender to the root
[root]
level = "debug"
appenders = [ "stdout", "file-application" ]

# How to configure the loggers: https://docs.rs/log4rs/1.0.0/log4rs/
[loggers."h2::codec"]
level = "info"

[loggers."inexor_rgf_application::implementation::component_manager_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::entity_type_manager_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::relation_type_manager_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::flow_type_manager_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::entity_vertex_manager_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::entity_behaviour_manager_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::relation_behaviour_manager_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::reactive_flow_instance_manager_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::web_resource_manager_impl"]
level = "info"

[loggers."inexor_rgf_plugin_mqtt::provider::component_provider"]
level = "debug"
appenders = [ "file-plugin-mqtt" ]
additive = false

[loggers."inexor_rgf_plugin_mqtt::provider::entity_type_provider"]
level = "debug"
appenders = [ "file-plugin-mqtt" ]
additive = false

[loggers."inexor_rgf_plugin_mqtt::provider::relation_type_provider"]
level = "debug"
appenders = [ "file-plugin-mqtt" ]
additive = false

[loggers."inexor_rgf_plugin_mqtt::behaviour::relation::relation_behaviour_provider"]
level = "debug"
appenders = [ "file-plugin-mqtt" ]
additive = false

[loggers."inexor_rgf_plugin_mqtt::behaviour::relation::mqtt_subscribes"]
level = "debug"
appenders = [ "file-plugin-mqtt" ]
additive = false

[loggers."rumqttc::state"]
level = "debug"
appenders = [ "file-plugin-mqtt" ]
additive = false

[loggers."inexor_rgf_plugin_arithmetic::providers"]
level = "info"

[loggers."inexor_rgf_plugin_base::providers"]
level = "info"

[loggers."inexor_rgf_plugin_taxonomy::providers"]
level = "info"

[loggers."inexor_rgf_plugin_metadata::providers"]
level = "info"

[loggers."inexor_rgf_plugin_value::providers"]
level = "info"

[loggers."inexor_rgf_plugin_comparison::providers"]
level = "info"

[loggers."inexor_rgf_plugin_config::providers"]
level = "info"

[loggers."inexor_rgf_plugin_connector::providers"]
level = "info"

[loggers."inexor_rgf_plugin_input_device::provider"]
level = "info"

[loggers."inexor_rgf_plugin_logical::providers"]
level = "info"

[loggers."inexor_rgf_plugin_numeric::plugin"]
level = "info"

[loggers."inexor_rgf_plugin_numeric::providers"]
level = "info"

[loggers."inexor_rgf_plugin_system_environment::plugin"]
level = "info"

[loggers."inexor_rgf_plugin_system_environment::provider"]
level = "info"

[loggers."inexor_rgf_plugin_string::providers"]
level = "info"

[loggers."inexor_rgf_plugin_file::providers"]
level = "info"

[loggers."inexor_rgf_plugin_json::providers"]
level = "info"

[loggers."inexor_rgf_plugin_binary::providers"]
level = "info"

[loggers."inexor_rgf_plugin_random::providers"]
level = "info"

[loggers."inexor_rgf_plugin_http::providers"]
level = "info"

[loggers."salsa"]
level = "info"

[loggers."salsa::derived::slot"]
level = "warn"

[loggers."inexor_rgf_core_reactive"]
level = "trace"

[loggers."inexor_rgf_plugin_value"]
level = "trace"

[loggers."inexor_rgf_plugin_connector"]
level = "trace"

[loggers."inexor_rgf_plugin_logical"]
level = "trace"

[loggers."inexor_rgf_core_frp"]
level = "trace"

[loggers."inexor_rgf_application::plugin::container"]
level = "info"

[loggers."inexor_rgf_application::implementation::plugin_resolver_impl"]
level = "debug"

[loggers."inexor_rgf_application::implementation::plugin_container_manager_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::entity_behaviour_registry_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::entity_component_behaviour_registry_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::relation_behaviour_registry_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::relation_component_behaviour_registry_impl"]
level = "info"

[loggers."inexor_rgf_application::implementation::dynamic_graph_schema_manager_impl"]
level = "info"
