name: Rust

on:
  push:
    branches: [ main ]
    paths:
      - "crates/**/*.rs"
      - "crates/**/Cargo.toml"
      - "Cargo.toml"
      - "Cargo.lock"
      - "CHANGELOG.md"
      - ".github/workflows/rust.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "crates/**/*.rs"
      - "crates/**/Cargo.toml"
      - "Cargo.toml"
      - "Cargo.lock"
      - "CHANGELOG.md"
      - ".github/workflows/rust.yml"

env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"
  AWS_LC_SYS_PREBUILT_NASM: 1

jobs:
  formatting:
    name: Verify code formatting
    runs-on: ubuntu-latest
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v4
      - name: Install latest nightly
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-08-19
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
  check_changelog:
    name: Check Changelog
    runs-on: ubuntu-latest
    steps:
      - uses: tarides/changelog-check-action@v3
        with:
          changelog: CHANGELOG.md
  lint:
    name: Lint
    needs: [ formatting, check_changelog ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [ stable, nightly-2024-08-19 ]
        target: [ x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl ]
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          components: clippy
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Run cargo clippy
        run: cargo clippy
  build:
    name: Release Build
    needs: [ lint ]
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        toolchain: [ stable, nightly-2024-08-19 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Build (Release Mode)
        run: cargo build --release --verbose
  test:
    name: Tests
    needs: [ lint ]
    strategy:
      matrix:
        toolchain: [ stable, nightly-2024-08-19 ]
        target: [ x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl ]
    runs-on: ubuntu-latest
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
      - name: Install musl-tools
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: musl-tools # provides musl-gcc
          version: 1.0
        if: matrix.target == 'x86_64-unknown-linux-musl'
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - name: Test (Release Mode)
        run: cargo test --release --verbose --target ${{ matrix.target }}
  update-tag:
    name: Update Tag
    needs: [ build, test ]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v4
      - name: Update Tag nightly
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git push origin :refs/tags/nightly
          git tag -fa nightly -m "Nightly Build"
          git push origin --tags
