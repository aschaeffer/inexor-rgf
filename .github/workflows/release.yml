name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v3
      - name: Create GitHub Release
        uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
  upload-assets:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          # Universal macOS binary is supported as universal-apple-darwin.
          - target: universal-apple-darwin
            os: macos-latest
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - name: VCS Checkout
      uses: actions/checkout@v3
    - name: Upload Rust Binary
      uses: taiki-e/upload-rust-binary-action@v1
      with:
        bin: inexor-rgf-rt-standalone
        target: ${{ matrix.target }}
        include: LICENSE.md,README.md,CHANGELOG.md,config,plugins
        tar: unix
        zip: windows
        leading_dir: true
        token: ${{ secrets.GITHUB_TOKEN }}
      env:
        VERGEN_IDEMPOTENT: true
  crates-io:
    name: Publish on crates.io
    runs-on: ubuntu-latest
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Install Cargo Workspaces
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-workspaces
          version: latest
          use-tool-cache: true
      - name: Publish on crates.io
        uses: actions-rs/cargo@v1
        with:
          command: workspaces
          args: publish --from-git
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          VERGEN_IDEMPOTENT: true
  debian-package:
    name: Publish debian package
    runs-on: ubuntu-latest
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Install Cargo Deb
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-deb
          version: latest
          use-tool-cache: true
      - name: Create Debian Package
        run: |
          cd ./crates/standalone
          cargo deb -p inexor-rgf-rt-standalone
        env:
          VERGEN_IDEMPOTENT: true
      - name: Upload debian package to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/debian/inexor-rgf_*_*.deb
          file_glob: true
          tag: ${{ github.ref }}
