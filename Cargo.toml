cargo-features = ["edition2021"]

[package]
name = "inexor-rgf-application"
description = "Inexor - Reactive Graph Flow - Application"
version = "0.2.1"
authors = ["Andreas Schaeffer <hanack@nooblounge.net"]
edition = "2021"
license = "MIT"
readme = "README.md"
keywords = ["reactive", "graph", "flow", "entity", "entity system", "entity component system", "graph database"]
categories = ["game-engine","entity-component-system","iot","home-automation"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]

rand = "0.8.0"
log = { version = "0.4", features = ["std", "serde"] }
log4rs = { version = "1.0.0", features = ["console_appender", "file_appender"]}
uuid = { version = "0.8.2", features = ["serde", "v4"] }
waiter_di = { version = "1.6.4", features = [ "async" ] }
async-trait = "0.1"
async-std = { version = "1.8", features = ["attributes"] }
lazy_static = "1.4.0"
serde = { version = "1.0.115", features = [ "derive" ] }
serde_json = "1.0.61"
# bidule = "0.2.0" (patched version inside this crate)
deno_core = "0.75.0"
anyhow = "1.0.37"
include-flate = "0.1.3"
indradb-lib = "1"
rust-embed = { version = "5.7.0", features = ["debug-embed", "compression"] }
num_cpus = "1.13.0"
strum = { version = "0.20", features = ["derive"] }
strum_macros = "0.20"
#syn = "=1.0.57"
syn = "1.0.75"
random-string = "0.1.2"
futures-await-test = "0.3.0"
# TODO: necessary?
futures = "0.3"

actix = "0.10"
actix-web = "3"
actix-rt = "2.1.0"
actix-cors = "0.5.4"
actix-files = "0.5.0"
async-graphql = "2.9.12"
async-graphql-actix-web = "2.9.12"
mime = "0.3.16"

inexor-rgf-core-frp = { git = "https://github.com/aschaeffer/inexor-rgf-core-frp.git" }
inexor-rgf-core-model = { git = "https://github.com/aschaeffer/inexor-rgf-core-model.git" }
inexor-rgf-core-reactive = { git = "https://github.com/aschaeffer/inexor-rgf-core-reactive.git" }
inexor-rgf-core-behaviour = { git = "https://github.com/aschaeffer/inexor-rgf-core-behaviour.git" }
inexor-rgf-core-plugins = { git = "https://github.com/aschaeffer/inexor-rgf-core-plugins.git" }

# TODO: Remove them (in future they will be dynamically loaded at runtime)
#inexor-ecs-type-system-base = { path = "../inexor-ecs-type-system/base" }
#inexor-ecs-type-system-arithmetic = { path = "../inexor-ecs-type-system/arithmetic" }
#inexor-ecs-type-system-connector = { path = "../inexor-ecs-type-system/connector" }
#inexor-ecs-type-system-inout = { path = "../inexor-ecs-type-system/inout" }
#inexor-ecs-type-system-logical = { path = "../inexor-ecs-type-system/logical" }
#inexor-ecs-type-system-mqtt = { path = "../inexor-ecs-type-system/mqtt" }
#inexor-ecs-type-system-numeric = { path = "../inexor-ecs-type-system/numeric" }
#inexor-ecs-type-system-taxonomy = { path = "../inexor-ecs-type-system/taxonomy" }
#inexor-ecs-type-system-ui = { path = "../inexor-ecs-type-system/ui" }
#inexor-ecs-type-system-value = { path = "../inexor-ecs-type-system/value" }
#inexor-system-environment = { path = "../inexor-system-environment" }

[[bin]]
name = "inexor-rgf-application"
#required-features = ["frobnicate"]

[features]
#default = [
#    "arithmetic",
#    "base",
#    "connector",
#    "inout",
#    "logical",
#    "mqtt",
#    "numeric",
#    "system_environment",
#    "taxonomy",
#    "user_interface",
#    "value"
#]
#arithmetic = []
#base = []
#connector = []
#inout = []
#logical = []
#mqtt = []
#numeric = []
#system_environment = []
#taxonomy = []
#user_interface = []
#value = []
