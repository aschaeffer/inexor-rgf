searchState.loadedDescShard("inexor_rgf_graphql_schema", 0, "Inexor GraphQL Interface\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEntity instances represents an typed object which contains …\nThe description of the entity instance.\nEntity instance specific extensions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe unique identifier of the entity instance.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe namespace the entity type belongs to.\nThe properties of then entity instance.\nThe name of the entity type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents a flow with entity instances and relation …\nTextual description of the flow.\nThe entity instances which are contained in this flow.\nReturns the argument unchanged.\nThe id of the flow corresponds to the id of the wrapper …\nCalls <code>U::from(self)</code>.\nThe name of the flow.\nThe namespace the entity type belongs to.\nThe relation instances which are contained in this flow.\nThe name of the entity type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRelation instances are edges from an outbound entity …\nTextual description of the relation instance.\nRelation instance specific extensions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe id of the inbound vertex.\nThe instance id of the relation instance type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe namespace the relation type belongs to.\nThe id of the outbound vertex.\nThe properties of then relation instance.\nThe name of the relation type.\nThe primary key of an edge consists of the outbound id, the\nReturns the argument unchanged.\nThe id of the inbound entity instance.\nThe instance id.\nCalls <code>U::from(self)</code>.\nThe namespace.\nThe id of the outbound entity instance.\nThe name of the relation type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe namespace of the behaviour type.\nThe name of the behaviour type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe namespace of the component.\nThe name of the component.\nThe behaviour.\nThe entity type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe namespace of the entity type.\nThe name of the entity type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe namespace of the extension.\nThe name of the extension.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe namespace of the flow type.\nThe name of the flow type.\nThe data type of the property\nThe description of the property\nProperty specific extensions\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe property is mutable or immutable\nThe name of the property\nSpecifies which type of socket\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe namespace of the relation type.\nThe name of the relation type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of the property.\nThe value of the property as JSON representation.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents any type (relations).\nRepresents a JSON array.\nRepresents a JSON boolean.\nThe data types of a value.\nRepresents a JSON null value.\nRepresents a JSON number, whether integer or floating …\nRepresents a JSON object.\nRepresents a JSON string.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe description of the extension.\nThe extension as JSON representation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe namespace of the extension.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe mutability of a property.\nThe property is immutable.\nThe property is mutable.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe socket type defines if the property acts as an input …\nThe property acts as input socket and accepts incoming …\nThe property doesn’t act as input or output socket.\nThe property acts as output socket and accepts outgoing …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")