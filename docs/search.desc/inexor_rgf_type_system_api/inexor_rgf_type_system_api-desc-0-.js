searchState.loadedDescShard("inexor_rgf_type_system_api", 0, "Exports the component with the given name to a JSON file …\nImports a component from a JSON file located at the given …\nAdds an extension to the given component.\nAdds a property to the given component.\nReturns the count of components.\nReturns the count of components of the given namespace.\nCreates a new component of the given type with the …\nDeletes the component with the given name.\nReturns all components whose type names matches the given …\nReturns the component with the given name or empty.\nReturns all component types.\nReturns all components of the given namespace.\nReturns the component with the given fully qualified name …\nReturns the components with the given types.\nReturns all defined namespaces.\nReturns the ids of all component types.\nReturns all component types of the given namespace.\nReturns true, if a component with the given type exists.\nReturns true, if a component with the given fully …\nMerges the given component_to_merge into an existing …\nRegisters the given component type.\nRemoves the extension with the given extension_name from …\nRemoves the property with the given property_name from the …\nReplaces the component with the given name with the given …\nReplaces the extension of the given component.\nUpdates the property with the given property_name. It’s …\nRegisters a component provider.\nUnregisters a component provider.\nExports the entity type with the given name to a JSON file …\nImports an entity type from a JSON file file located at …\nAdds the component with the given component_name to the …\nAdds an extension to the entity type with the given name.\nAdds a property to the entity type with the given name.\nReturns the count of entity types.\nReturns the count of entity types of the given namespace.\nCreates a new entity type.\nDeletes the entity type with the given name.\nReturns all entity types whose names matches the given …\nReturns the entity type with the given name or empty.\nReturns all entity types.\nReturns all entity types of the given namespace\nReturns all entity types of the given namespace\nReturns the entity type with the given fully qualified …\nReturns all defined namespaces.\nReturns the ids of all entity types.\nReturns all entity types of the given namespace\nReturns true, if a entity type with the given name exists.\nReturns true, if a entity type with the given fully …\nMerges the given entity_type_to_merge into an existing …\nRemove the component with the given component_name from …\nRemoves the extension with the given extension_name from …\nRemoves the property with the given property_name from the …\nUpdates the property with the given property_name. It’s …\nUpdates the property with the given property_name. It’s …\nValidates the entity type with the given name. Tests that …\nRegisters an entity type provider.\nUnregisters an entity type provider.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExports the flow type with the given name to a JSON file …\nImports a flow type from a JSON file file located at the …\nAdds the given entity instance to the given flow type.\nAdds the given extension to the given flow type.\nAdds the given relation instance to the given flow type.\nAdds the given variable to the given flow type.\nReturns the count of flow types.\nReturns the count of flow types of the given namespace.\nCreates a new flow type.\nDeletes the given flow type.\nReturns all flow types whose names matches the given …\nReturns the flow type with the given name or empty.\nReturns all flow types.\nReturns all flow types.\nReturns the flow type with the given fully qualified name …\nReturns all defined namespaces.\nReturns the ids of all flow types.\nReturns true, if a flow type with the given name exists.\nReturns true, if a flow type with the given fully …\nRemoves the entity instance with the given id from the …\nRemoves the extension with the given name from the given …\nRemoves the relation instance with the given id from the …\nRemoves the variable with the given name from the given …\nUpdates the entity instance with the given id of the given …\nUpdates the extension with the given name of the given …\nUpdates the relation instance with the given id of the …\nUpdates the variable with the given name of the given flow …\nValidates the given flow type. Tests that all entity types …\nRegisters a flow type provider.\nUnregisters a flow type provider.\nReturns all namespaces.\nExports the relation type with the given name to a JSON …\nImports a relation type from a JSON file file located at …\nAdds the component with the given component_name to the …\nAdds an extension to the relation type with the given name.\nAdds a property to the relation type with the given name.\nReturns the count of relation types.\nReturns the count of relation types of the given namespace.\nCreates a new relation type.\nDeletes the relation type with the given name.\nReturns all relation types whose names matches the given …\nReturns the relation type with the given name.\nReturns all relation types.\nReturns all relation types of the given namespace\nReturns all relation types of the given namespace\nReturns the relation type with the given fully qualified …\nReturns inbound relation types for the given entity type.\nReturns all defined namespaces.\nReturns outbound relation types for the given entity type.\nReturns the ids of all relation types.\nReturns all relation types of the given namespace\nReturns true, if a relation type with the given name …\nReturns true, if a relation type with the given fully …\nMerges the given relation_type_to_merge into an existing …\nRemove the component with the given component_name from …\nRemoves the extension with the given extension_name from …\nRemoves the property with the given property_name from the …\nUpdates the extension with the given extension type. It’…\nUpdates the property with the given property_name. It’s …\nValidates the relation type with the given name. Tests …\nRegisters a relation type provider.\nUnregisters a relation type provider.\nReturns a collection of type ids which should be …\nReturns a collection of types which should be registered.\nReturns the id of the type provider.\nEmits a system event.\nReturns the reactive entity instance which can be …\nReturns reactive entity instances which can be subscribed …\nThe type system has changed\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")